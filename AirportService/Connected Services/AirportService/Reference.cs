//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirportService.AirportService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AirportService.IAirportService")]
    public interface IAirportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetControlTower", ReplyAction="http://tempuri.org/IAirportService/GetControlTowerResponse")]
        AirportEntities.ControlTower GetControlTower();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetControlTower", ReplyAction="http://tempuri.org/IAirportService/GetControlTowerResponse")]
        System.Threading.Tasks.Task<AirportEntities.ControlTower> GetControlTowerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetPlaneManager", ReplyAction="http://tempuri.org/IAirportService/GetPlaneManagerResponse")]
        AirportEntities.PlaneManager GetPlaneManager();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetPlaneManager", ReplyAction="http://tempuri.org/IAirportService/GetPlaneManagerResponse")]
        System.Threading.Tasks.Task<AirportEntities.PlaneManager> GetPlaneManagerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetPlane", ReplyAction="http://tempuri.org/IAirportService/GetPlaneResponse")]
        AirportEntities.Plane GetPlane();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetPlane", ReplyAction="http://tempuri.org/IAirportService/GetPlaneResponse")]
        System.Threading.Tasks.Task<AirportEntities.Plane> GetPlaneAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetFlight", ReplyAction="http://tempuri.org/IAirportService/GetFlightResponse")]
        AirportEntities.Flight GetFlight();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetFlight", ReplyAction="http://tempuri.org/IAirportService/GetFlightResponse")]
        System.Threading.Tasks.Task<AirportEntities.Flight> GetFlightAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/UpdateDataBase", ReplyAction="http://tempuri.org/IAirportService/UpdateDataBaseResponse")]
        void UpdateDataBase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/UpdateDataBase", ReplyAction="http://tempuri.org/IAirportService/UpdateDataBaseResponse")]
        System.Threading.Tasks.Task UpdateDataBaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetValue", ReplyAction="http://tempuri.org/IAirportService/GetValueResponse")]
        string GetValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetValue", ReplyAction="http://tempuri.org/IAirportService/GetValueResponse")]
        System.Threading.Tasks.Task<string> GetValueAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAirportServiceChannel : AirportService.AirportService.IAirportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AirportServiceClient : System.ServiceModel.ClientBase<AirportService.AirportService.IAirportService>, AirportService.AirportService.IAirportService {
        
        public AirportServiceClient() {
        }
        
        public AirportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AirportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AirportEntities.ControlTower GetControlTower() {
            return base.Channel.GetControlTower();
        }
        
        public System.Threading.Tasks.Task<AirportEntities.ControlTower> GetControlTowerAsync() {
            return base.Channel.GetControlTowerAsync();
        }
        
        public AirportEntities.PlaneManager GetPlaneManager() {
            return base.Channel.GetPlaneManager();
        }
        
        public System.Threading.Tasks.Task<AirportEntities.PlaneManager> GetPlaneManagerAsync() {
            return base.Channel.GetPlaneManagerAsync();
        }
        
        public AirportEntities.Plane GetPlane() {
            return base.Channel.GetPlane();
        }
        
        public System.Threading.Tasks.Task<AirportEntities.Plane> GetPlaneAsync() {
            return base.Channel.GetPlaneAsync();
        }
        
        public AirportEntities.Flight GetFlight() {
            return base.Channel.GetFlight();
        }
        
        public System.Threading.Tasks.Task<AirportEntities.Flight> GetFlightAsync() {
            return base.Channel.GetFlightAsync();
        }
        
        public void UpdateDataBase() {
            base.Channel.UpdateDataBase();
        }
        
        public System.Threading.Tasks.Task UpdateDataBaseAsync() {
            return base.Channel.UpdateDataBaseAsync();
        }
        
        public string GetValue() {
            return base.Channel.GetValue();
        }
        
        public System.Threading.Tasks.Task<string> GetValueAsync() {
            return base.Channel.GetValueAsync();
        }
    }
}
